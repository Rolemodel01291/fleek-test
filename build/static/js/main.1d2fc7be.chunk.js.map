{"version":3,"sources":["assets/img/logo.svg","components/AdminNavbar.js","pages/FleekSlice.js","components/Sidebar.js","components/Card.js","@fleek/useWindowSize.js","components/PaginationCommon.js","components/GoTop.js","pages/Lists.js","components/Tab.js","pages/Details.js","app/store.js","App.js","reportWebVitals.js","index.js"],"names":["AdminNavbar","showSidebar","setShowSidebar","location","useLocation","className","pathname","includes","color","buttonType","size","iconOnly","rounded","ripple","onClick","name","src","Logo","fetchData","createAsyncThunk","params","a","api","currentPage","search","status","gender","fetch","then","res","json","response","data","undefined","fleekSlice","createSlice","initialState","fetchedData","pageNumber","reducers","setFleekSearch","state","action","payload","setFleekStatus","setFleekGender","setFleekPageNumber","extraReducers","fulfilled","actions","Sidebar","dispatch","useDispatch","useSelector","fleek","useState","setStatus","setGender","setSearch","useEffect","handleSearch","useCallback","e","target","value","handleStatus","handleGender","placeholder","onChange","FormControl","fullWidth","InputLabel","id","Select","labelId","label","MenuItem","CardItem","display","page","results","history","useHistory","map","x","image","species","alt","push","useWindowSize","setSize","debounceUpdateSize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","window","innerWidth","innerHeight","addEventListener","removeEventListener","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","pool","Paginator","props","totalRecords","pageLimit","pageNeighbours","Math","max","min","totalPages","ceil","init","setState","firstRun","useRef","gotoPage","setCurrentPage","setOffset","current","handleMoveLeft","evt","preventDefault","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","length","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","activePage","index","backgroundColor","style","handleClick","defaultProps","pageContainerClass","pageActiveClass","pageItemClass","pageLinkClass","pageNextText","pagePrevText","pagePrevClass","pageNextClass","GoTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","block","clsx","scrollTo","top","behavior","aria-hidden","Lists","info","count","TabCard","episodes","openTab","setOpenTab","setData","width","getEpisodesAPI","Promise","all","slice","responses","item","active","href","air_date","episode","CardDetails","useParams","updateFetchedData","origin","created","type","goBack","moment","format","store","configureStore","reducer","fleekReducer","App","exact","path","component","Details","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d2fc7be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.baddcbe0.svg\";","import { useLocation  } from \"react-router-dom\";\nimport Button from '@material-tailwind/react/Button';\nimport Icon from '@material-tailwind/react/Icon';\nimport Image from '@material-tailwind/react/Image';\nimport Logo from 'assets/img/logo.svg';\n\nexport default function AdminNavbar({ showSidebar, setShowSidebar }) {\n    const location = useLocation();\n    return (\n        <nav className=\"bg-light-blue-500 z-100 py-3 px-3\">\n            <div className=\"container max-w-full mx-auto flex items-center justify-between md:pr-8 md:pl-10\">\n                {!location.pathname.includes('details') ?  <div className=\"md:hidden\">\n                    <Button\n                        color=\"transparent\"\n                        buttonType=\"link\"\n                        size=\"lg\"\n                        iconOnly\n                        rounded\n                        ripple=\"light\"\n                        onClick={() => setShowSidebar('left-0')}\n                    >\n                        <Icon name=\"menu\" size=\"2xl\" color=\"white\" />\n                    </Button>\n                    <div\n                        className={`absolute top-2 md:hidden ${\n                            showSidebar === 'left-0' ? 'left-64' : '-left-64'\n                        } z-50 transition-all duration-300`}\n                    >\n                        <Button\n                            color=\"transparent\"\n                            buttonType=\"link\"\n                            size=\"lg\"\n                            iconOnly\n                            rounded\n                            ripple=\"light\"\n                            onClick={() => setShowSidebar('-left-64')}\n                        >\n                            <Icon name=\"close\" size=\"2xl\" color=\"white\" />\n                        </Button>\n                    </div>\n                </div> : <></>\n                }\n               \n\n                <div className=\"flex w-full justify-center items-center\"> \n                        <div className=\"w-48\">\n                            <Image src={Logo} rounded/>\n                        </div>\n            \n                </div>\n            </div>\n        </nav>\n    );\n}\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchData = createAsyncThunk('fleek/fetchData', async params => {\r\n    let api = `https://rickandmortyapi.com/api/character/?page=${params.currentPage}&name=${params.search}&status=${params.status}&gender=${params.gender}`;\r\n    const response = await fetch(api)\r\n        .then((res) => res.json());\r\n    const data = await response;\r\n    return data === undefined ? null : data;    \r\n});\r\n\r\n\r\nconst initialState = {\r\n    fetchedData: [],\r\n    pageNumber: 1,\r\n    status: \" \",\r\n    gender: \" \",\r\n    search: \" \"\r\n};\r\n\r\nconst fleekSlice = createSlice({\r\n  name: \"fleek\",\r\n  initialState,\r\n  reducers: {\r\n    setFleekSearch: (state, action) => {\r\n        state.search = action.payload;\r\n    },\r\n    setFleekStatus: (state, action) => {\r\n        state.status = action.payload;\r\n    },\r\n    setFleekGender: (state, action) => {\r\n        state.gender = action.payload;\r\n    },\r\n    setFleekPageNumber: (state, action) => {\r\n        state.pageNumber = action.payload;\r\n    }\r\n\r\n  },\r\n  extraReducers: {\r\n      [fetchData.fulfilled]: (state, action) => {\r\n        state.fetchedData = action.payload;\r\n      }\r\n  },\r\n});\r\n\r\nexport const {setFleekSearch, setFleekStatus, setFleekGender, setFleekPageNumber } = fleekSlice.actions;\r\n\r\nexport default fleekSlice.reducer;\r\n","import { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation  } from \"react-router-dom\";\nimport AdminNavbar from './AdminNavbar';\nimport NavbarInput from '@material-tailwind/react/NavbarInput';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport { setFleekSearch,setFleekGender, setFleekStatus, fetchData } from 'pages/FleekSlice';\n\nexport default function Sidebar() {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const pageNumber = useSelector((state) => state.fleek.pageNumber);\n    const [showSidebar, setShowSidebar] = useState('-left-64');\n    const [status, setStatus] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [search, setSearch] = useState(\"\");\n    \n\n    useEffect(() => {\n        dispatch(fetchData({pageNumber, search, status, gender}));\n    }, [dispatch, search, status, gender])\n\n    const handleSearch = useCallback((e)=> {\n        setSearch(e.target.value);\n        dispatch(setFleekSearch(e.target.value));\n    }, [search])\n\n    const handleStatus = useCallback((e)=> {\n        setStatus(e.target.value);\n        dispatch(setFleekStatus(e.target.value));\n    }, [status])\n\n    const handleGender = useCallback((e)=> {\n        setGender(e.target.value);\n        dispatch(setFleekGender(e.target.value));\n    }, [gender])\n\n    return (\n        <>\n            <AdminNavbar\n                showSidebar={showSidebar}\n                setShowSidebar={setShowSidebar}\n            />\n            {!location.pathname.includes('details') ? \n            <div\n                className={`h-screen fixed top-0 md:left-0 ${showSidebar} overflow-y-auto flex-row flex-nowrap overflow-hidden shadow-xl bg-white w-64 z-10 py-4 px-6 transition-all duration-300`}\n            >\n                <div className=\"flex-col items-stretch min-h-full flex-nowrap px-0 relative\">\n                    \n                    <div className=\"flex flex-col\">\n                       \n                        <ul className=\"flex-col min-w-full flex list-none\">\n                            <div className=\"flex mb-4 justify-between items-center bg-light-blue-500 rounded-lg\">\n                                <NavbarInput \n                                    placeholder=\"Filter By Name\" \n                                    onChange={(e)=> {\n                                        handleSearch(e);\n                                    }}\n                                />\n                            </div>\n                            \n                            <li className=\"rounded-lg mb-4 flex\">\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                                    <Select\n                                        className=\"w-52 rounded-lg\"\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select-helper\"\n                                        value={status}\n                                        label=\"Status\"\n                                        onChange={(e)=>handleStatus(e)}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>None</em>\n                                        </MenuItem>\n                                        <MenuItem value=\"Unknown\">Unknown</MenuItem>\n                                        <MenuItem value=\"Alive\">Alive</MenuItem>\n                                        <MenuItem value=\"Dead\">Dead</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </li>\n\n                            <li className=\"rounded-lg mb-4 flex\">\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\n                                    <Select\n                                        className=\"w-52 rounded-lg\"\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select-helper\"\n                                        value={gender}\n                                        label=\"Gender\"\n                                        onChange={(e)=>handleGender(e)}\n                                    >\n                                        <MenuItem value=\"\">\n                                            <em>None</em>\n                                        </MenuItem>\n                                        <MenuItem value=\"Unknown\">Unknown</MenuItem>\n                                        <MenuItem value=\"Male\">Male</MenuItem>\n                                        <MenuItem value=\"Female\">Female</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </li>\n                           \n                        </ul>\n\n                    </div>\n                </div>\n            </div> :\n            null\n        }\n        </>\n    );\n}\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"@material-tailwind/react/Card\";\r\nimport CardImage from \"@material-tailwind/react/CardImage\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport CardFooter from \"@material-tailwind/react/CardFooter\";\r\nimport H6 from \"@material-tailwind/react/Heading6\";\r\nimport Paragraph from \"@material-tailwind/react/Paragraph\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\n\r\n\r\nexport default function CardItem({ page, results }) {\r\n    let display;\r\n    const history = useHistory();\r\n\r\n    if (results) {\r\n        display = results.map((x) => {\r\n            \r\n          let { id, image, name, status, species } = x;\r\n\r\n          const navigateTo = () => {\r\n              history.push(`${page}${id}`);\r\n          }\r\n\r\n            return (\r\n                <div className=\"px-4 mb-14\" key={id}>\r\n                    <Card key={id} className=\"min-h-64 max-w-full\">\r\n                        <CardImage\r\n                            src={image}\r\n                            alt={name}\r\n                        />\r\n\r\n                        <CardBody>\r\n                            <H6 color=\"gray\">{name}</H6>\r\n                            <Paragraph color=\"gray\">\r\n                               Specie: {species}\r\n                            </Paragraph>\r\n                            <Paragraph color=\"gray\">\r\n                               Status: {status}\r\n                            </Paragraph>\r\n                        </CardBody>\r\n\r\n                        <CardFooter className=\"-mt-8\">\r\n                            <Button color=\"lightBlue\" size=\"lg\" ripple=\"light\" onClick={()=>navigateTo()}>\r\n                                Details\r\n                            </Button>\r\n                        </CardFooter>\r\n                    </Card>    \r\n                </div>\r\n                \r\n            );\r\n        });\r\n    }else{\r\n        display = \"No Characters Found :/\";\r\n    } \r\n\r\n    return <>{display}</>\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nfunction debounce(fn, ms) {\r\n  let timer;\r\n  return (_) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout((_) => {\r\n      timer = null;\r\n      fn.apply(this, arguments);\r\n    }, ms);\r\n  };\r\n}\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n\r\n  useEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n\r\n    const debounceUpdateSize = debounce(updateSize, 100);\r\n\r\n    window.addEventListener(\"resize\", debounceUpdateSize);\r\n\r\n    debounceUpdateSize();\r\n\r\n    return () => window.removeEventListener(\"resize\", debounceUpdateSize);\r\n  }, []);\r\n\r\n  return size;\r\n}\r\n\r\nexport default useWindowSize;","import React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { number, string, func, oneOfType, node } from 'prop-types';\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport useWindowSize  from \"../@fleek/useWindowSize\";\r\n\r\n\r\nconst LEFT_PAGE = 'LEFT';\r\nconst RIGHT_PAGE = 'RIGHT';\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const pool = [];\r\n\r\n  while (i <= to) {\r\n    pool.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return pool;\r\n};\r\n\r\nfunction Paginator(props) {\r\n  const [width, ] = useWindowSize();  \r\n  const init = () => {\r\n    let { totalRecords = null, pageLimit = 20, pageNeighbours = 0 } = props;\r\n    pageLimit = typeof pageLimit === 'number' ? pageLimit : 20;\r\n    totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\r\n    pageNeighbours =\r\n      typeof pageNeighbours === 'number'\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    const totalPages = Math.ceil(totalRecords / pageLimit);\r\n\r\n    return {\r\n      pageLimit,\r\n      totalRecords,\r\n      pageNeighbours,\r\n      totalPages\r\n    };\r\n  };\r\n\r\n  const [state, setState] = useState(() => init());\r\n  const firstRun = useRef(true);\r\n\r\n  const gotoPage = useCallback(\r\n    page => {\r\n      const currentPage = Math.max(1, Math.min(page, state.totalPages));\r\n      props.setCurrentPage(currentPage);\r\n    },\r\n    [state.totalPages, props.pageLimit]\r\n  );\r\n\r\n  useEffect(() => {\r\n    gotoPage(props.currentPage || 1);\r\n  }, [gotoPage, props.currentPage]);\r\n\r\n  useEffect(() => {\r\n    props.setOffset((props.currentPage - 1) * props.pageLimit);\r\n  }, [props.currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (firstRun.current) {\r\n      firstRun.current = false;\r\n      return;\r\n    }\r\n    const totalRecords = props.totalRecords;\r\n    const totalPages = Math.ceil(totalRecords / state.pageLimit);\r\n    setState({ ...state, totalRecords: props.totalRecords, totalPages });\r\n  }, [props.totalRecords]);\r\n\r\n  const handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    gotoPage(page);\r\n  };\r\n\r\n  const handleMoveLeft = useCallback(\r\n    evt => {\r\n      evt.preventDefault();\r\n      gotoPage(props.currentPage - state.pageNeighbours * 2 - 1);\r\n    },\r\n    [props.currentPage]\r\n  );\r\n\r\n  const handleMoveRight = useCallback(\r\n    evt => {\r\n      evt.preventDefault();\r\n      gotoPage(props.currentPage + state.pageNeighbours * 2 + 1);\r\n    },\r\n    [props.currentPage, state.pageNeighbours]\r\n  );\r\n\r\n\r\n  const fetchPageNumbers = useCallback(() => {\r\n    const totalPages = state.totalPages;\r\n    const currentPage = props.currentPage;\r\n    const pageNeighbours = state.pageNeighbours; //Pages between first and middle block\r\n    \r\n    //const off = width > 1024 ? 7 : 3; //offset for mobile and screen\r\n    const totalNumbers = state.pageNeighbours * 2 + 3; //Neigbours on both sides including first, middle and last\r\n    const totalBlocks = totalNumbers + 2; //including left and right buttons\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  }, [state.totalPages, props.currentPage, state.pageNeighbours]);\r\n\r\n  if (!state.totalRecords) return null;\r\n\r\n  if (state.totalPages === 1) return null;\r\n\r\n  const { currentPage } = props;\r\n  const pages = fetchPageNumbers();\r\n  let activePage = null; \r\n\r\n  return (\r\n    <ul className=\"flex justify-end mr-4 mb-6\">\r\n      {pages.map((page, index) => {\r\n         currentPage === page ? \r\n         activePage = { backgroundColor: \"#fdce09\" } : \r\n         activePage = null \r\n        if (page === LEFT_PAGE)\r\n          return (\r\n            <li className=\"flex\" key={index}>\r\n                <Button\r\n                    className=\"mx-2 w-8 h-10\"\r\n                    onClick={handleMoveLeft}\r\n                >\r\n                    {\"<\"}\r\n                </Button>\r\n            </li>\r\n          );\r\n\r\n        if (page === RIGHT_PAGE)\r\n          return (\r\n            <li className=\"flex\" key={index}>\r\n              <Button\r\n                    className=\"mx-2 w-8 h-10\"\r\n                    onClick={handleMoveRight}\r\n                >\r\n                {\">\"}\r\n              </Button>\r\n            </li>\r\n          );\r\n\r\n        return (\r\n            <Button\r\n                style={activePage}\r\n                key={index}\r\n                className={`mx-2 w-8 h-10 ${\r\n                currentPage === page ?  \"bg-yellow-400\" : null\r\n              }`}\r\n              onClick={e => handleClick(page, e)}\r\n            >\r\n              {page}\r\n            </Button>\r\n          \r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nPaginator.defaultProps = {\r\n  pageContainerClass: 'react-hooks-paginator',\r\n  pageActiveClass: 'active',\r\n  pageItemClass: 'page-item',\r\n  pageLinkClass: 'page-link',\r\n  pageNextText: 'Next »',\r\n  pagePrevText: '« Prev',\r\n  pagePrevClass: 'page-link',\r\n  pageNextClass: 'page-link'\r\n};\r\n\r\nPaginator.propTypes = {\r\n  currentPage: number,\r\n  pageActiveClass: string,\r\n  pageNextText: oneOfType([string, node]),\r\n  pagePrevText: oneOfType([string, node]),\r\n  pagePrevClass: string,\r\n  pageNextClass: string,\r\n  pageContainerClass: string,\r\n  pageItemClass: string,\r\n  pageLimit: number,\r\n  pageLinkClass: string,\r\n  pageNeighbours: number,\r\n  setCurrentPage: func,\r\n  setOffset: func,\r\n  totalRecords: number.isRequired\r\n};\r\n\r\nexport default Paginator;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from 'clsx';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Button from \"@material-tailwind/react/Button\";\r\n\r\nconst GoTop = () => {\r\n\r\nconst [isVisible, setIsVisible] = useState(false);   \r\n\r\nuseEffect(() => {\r\n    window.addEventListener('scroll', toggleVisibility)\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', toggleVisibility)\r\n    }\r\n}, [])\r\n\r\nconst toggleVisibility = () => {\r\n    if (window.pageYOffset > 300) {\r\n      setIsVisible(true)\r\n    } else {\r\n      setIsVisible(false)\r\n    }\r\n}\r\n\r\nconst scrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth'});\r\n}\r\n\r\nreturn (\r\n<>\r\n    <div className=\"fixed bottom-2 right-2\">\r\n        <Button\r\n            color=\"lightBlue\"\r\n            buttonType=\"outline\"\r\n            size=\"sm\"\r\n            rounded={false}\r\n            block={false}\r\n            iconOnly={false}\r\n            ripple=\"dark\"\r\n            className={clsx(\r\n                isVisible? 'opacity-100' : 'opacity-0', \r\n                'inline-flex items-center, p-3 rounded-full shadow-sm text-black bg-pink-600 ')}\r\n            onClick={scrollTop}\r\n        >\r\n            <KeyboardArrowUpIcon \r\n                className=\"h-6 w-6\" \r\n                aria-hidden=\"true\" \r\n            />\r\n        </Button>\r\n    </div>\r\n</>\r\n\r\n);\r\n};\r\n\r\nexport default GoTop;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CardItem from \"../components/Card\";\r\nimport Pagination from \"../components/PaginationCommon\";\r\nimport GoTop from \"../components/GoTop\";\r\nimport { fetchData, setFleekPageNumber } from \"./FleekSlice\";\r\n\r\nexport default function Lists() {\r\n    const dispatch = useDispatch();\r\n    const fetchedData = useSelector((state) => state.fleek.fetchedData);\r\n    const search = useSelector((state) => state.fleek.search);\r\n    const status = useSelector((state) => state.fleek.status);\r\n    const gender = useSelector((state) => state.fleek.gender);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [offset, setOffset] = useState(0);\r\n    let { info, results } = fetchedData;\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchData({currentPage, search, status, gender}));\r\n    }, [dispatch, currentPage]);\r\n\r\n    const onPageChange = (page) => {\r\n        setCurrentPage(page);\r\n        dispatch(setFleekPageNumber(page));\r\n    }\r\n\r\n    return (\r\n        <div className=\"md:ml-64\">\r\n            <div className=\"px-3 md:px-8 h-40\" />\r\n            <div className=\"px-3 md:px-8 -mt-24\">\r\n                <div className=\"container mx-auto max-w-full\">\r\n                    <div className=\"grid grid-cols-1 xl:grid-cols-3 lg:grid-cols-3\">\r\n                        <CardItem page=\"/details/\" results={results} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {!!info && <Pagination\r\n                totalRecords={info.count}\r\n                pageLimit={20}\r\n                pageNeighbours={1}\r\n                setOffset={setOffset}\r\n                currentPage={currentPage}\r\n                setCurrentPage={onPageChange}\r\n            />}\r\n            <GoTop />\r\n            \r\n        </div>   \r\n  );\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Tab from \"@material-tailwind/react/Tab\";\r\nimport TabList from \"@material-tailwind/react/TabList\";\r\nimport TabItem from \"@material-tailwind/react/TabItem\";\r\nimport TabContent from \"@material-tailwind/react/TabContent\";\r\nimport TabPane from \"@material-tailwind/react/TabPane\";\r\nimport H6 from \"@material-tailwind/react/Heading6\";\r\nimport useWindowSize  from \"../@fleek/useWindowSize\";\r\n\r\nexport default function TabCard({ episodes }) {\r\n    const [openTab, setOpenTab] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [width, ] = useWindowSize();\r\n\r\n    useEffect(() => {\r\n        !!episodes && getEpisodesAPI(episodes);\r\n    }, [episodes])\r\n\r\n    /* \r\n        API calls for Episodes returns response as promise, \r\n        so need to be parsed again using promise.all  \r\n    */\r\n    const getEpisodesAPI = (episodes) => {\r\n        Promise.all(episodes && episodes.slice(0, episodes.length > 5 ? 5 : episodes.length)\r\n            .map(e => fetch(e)))\r\n            .then(responses => \r\n                Promise.all(responses.map((res) => res.json()\r\n            ))\r\n        ).then(results => {\r\n            setData(results);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Tab>\r\n            <TabList color=\"lightBlue\">\r\n                {data?.map((item, index) => (\r\n                    <TabItem  \r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setOpenTab(index);\r\n                        }}\r\n                        ripple=\"light\"\r\n                        active={openTab === index ? true : false}\r\n                        href=\"tabItem\"\r\n                    >\r\n                        {width > 768 ? `Episode${index+1}` : index + 1 }\r\n                    </TabItem>\r\n                ))}\r\n            </TabList>\r\n\r\n            <TabContent>\r\n                {data?.map((item, index) => (\r\n                    <TabPane active={openTab === index ? true : false}>\r\n                        <H6>Id: {item.id}</H6>\r\n                        <H6>Name: {item.name}</H6>\r\n                        <H6>Air_Date: {item.air_date}</H6>\r\n                        <H6>Episode: {item.episode}</H6>\r\n                    </TabPane>\r\n                ))}\r\n            </TabContent>\r\n        </Tab>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport H6 from \"@material-tailwind/react/Heading6\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport Tab from \"../components/Tab\";\r\n\r\nconst CardDetails = () => {\r\n  const history = useHistory();  \r\n  const { id } = useParams();\r\n  const [fetchedData, updateFetchedData] = useState([]);\r\n  const { name, origin, gender, image, status, species, created, type, episode } = fetchedData;\r\n\r\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      updateFetchedData(data);\r\n    })();\r\n  }, [api]);\r\n\r\n  return (\r\n    <>\r\n    \r\n            <div className=\"flex mt-24 justify-center items-center min-w-fit\">\r\n                <div className=\"flex\">\r\n                    <div className=\"flex justify-center flex-col flex-wrap\">\r\n                        <div className=\"flex grid grid-cols-1 xl:grid-cols-2 lg:grid-cols-2 md:grid-cols-2 mb-16 md:mb-16\">\r\n                            <div className=\"flex sm:mx-auto\">\r\n                                    <div className=\"flex w-1/6 h-16 mx-2\">\r\n                                        <Button\r\n                                            color=\"lightBlue\"\r\n                                            buttonType=\"outline\"\r\n                                            size=\"sm\"\r\n                                            rounded={false}\r\n                                            block={false}\r\n                                            iconOnly={false}\r\n                                            ripple=\"dark\"\r\n                                            onClick={()=>history.goBack()}\r\n                                        >\r\n                                            <ArrowBackIosIcon \r\n                                                className=\"h-4 w-4\" \r\n                                                aria-hidden=\"true\" \r\n                                            />\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"flex w-5/6\">\r\n                                        <img className=\"img-fluid item-center\" src={image} alt=\"\" />\r\n                                    </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"flex sm:mx-auto flex-col px-8 py-4\">\r\n                                <H6>Id: {id}</H6>\r\n                                <H6>Name: {name}</H6>\r\n                                <H6>Status: {status}</H6>\r\n                                <H6>Specie: {species}</H6>\r\n                                <H6>Type: {type}</H6>\r\n                                <H6>Gender: {gender}</H6>\r\n                                <H6>Origin: {origin?.name}</H6>\r\n                                <H6>Created: {moment(created).format('DD MM YYYY')}</H6>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <H6>Episodes Info</H6>\r\n                            <Tab episodes={episode}/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        \r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport fleekReducer from \"../pages/FleekSlice\";\r\nexport const store = configureStore({\r\n  reducer: {\r\n    fleek: fleekReducer\r\n  },\r\n});","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Sidebar from 'components/Sidebar';\nimport Lists from 'pages/Lists';\nimport Details from 'pages/Details';\nimport { store } from './app/store';\n\n// Tailwind CSS Style Sheet\nimport 'assets/styles/tailwind.css';\n\nfunction App() {\n    return (\n        <>\n            <Provider store={store}>\n                <Sidebar />\n                <Switch>\n                    <Route exact path=\"/\" component={Lists} />\n                    <Route exact path=\"/details/:id\" component={Details} />\n                    <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n            </Provider>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from 'App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}